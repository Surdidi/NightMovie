@page "/login"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@using NightMovie.API.DTO
@inject NightMovieApiClient NightMovieApiClient
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navigationManager

<PageTitle>Login</PageTitle>

<h3>Login</h3>

<EditForm FormName="LoginForm" Model="@loginModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="pseudo" class="form-label">Pseudo</label>
        <InputText id="pseudo" class="form-control" @bind-Value="loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginOrCreateDTO loginModel = new LoginOrCreateDTO();

    private async Task HandleValidSubmit()
    {
        await NightMovieApiClient.Login(loginModel);
        navigationManager.NavigateTo("/");
    }

    
}
